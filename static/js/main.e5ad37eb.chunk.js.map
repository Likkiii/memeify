{"version":3,"sources":["components/Header.js","components/displayMeme.js","components/canvas.js","components/MemeGen.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","Header","classes","useState","message","setMessage","AppBar","position","className","Toolbar","IconButton","edge","aria-label","Typography","variant","src","alt","height","width","htmlFor","type","id","onChange","e","invertedNodes","document","querySelectorAll","body","classList","toggle","forEach","node","displayMeme","props","state","texts","onSubmit","handleSubmit","map","text","key","name","placeholder","value","handleChange","bind","handleColorChange","borderColor","handleBorderColorChange","onClick","handleRemoveText","handleAddText","handleRandomClick","handleDownloadClick","getElementById","click","handleFileChange","canvas","checkImageHeight","maxHeight","newheight","newwidth","MemeGenerator","getPos","el","lx","ly","offsetLeft","offsetTop","offsetParent","x","y","textHittest","textIndex","handleMouseDown","offset","offsetX","offsetY","preventDefault","startX","parseInt","clientX","startY","clientY","i","length","selectedText","handleMouseMove","dx","dy","mouseX","mouseY","setState","handleMouseUp","handleMouseOut","setImage","image","url","context","getContext","crossOrigin","onload","drawImage","font","size","measureText","strokeStyle","strokeText","fillStyle","fillText","event","target","setTimeout","undefined","topText","bottomText","bottomColor","bottomBorderColor","allMemeImgs","Math","floor","window","innerHeight","updateImage","componentDidMount","this","Image","fetch","then","response","json","memes","data","onmousedown","onmousemove","onmouseup","onmouseout","push","slice","randNum","random","console","log","scope","URL","createObjectURL","files","img","toDataURL","href","link","createElement","download","handleChangeBT","Component","Footer","Provider","App","data-theme","MemeGen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"qRASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,EACVK,MAAO,aA+CEC,MA3Cf,WAEI,IAAMC,EAAUX,IAFF,EAGkBY,oBAAS,GAH3B,mBAGNC,EAHM,KAGGC,EAHH,KAYd,OACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAU,kBAChC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQH,UAAWN,EAAQN,WAAYI,MAAM,UAAUY,aAAW,SAEnF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWN,EAAQH,OACxC,yBACIS,UAAU,0BACVO,IAAI,wEAEJC,IAAI,WACJC,OAAO,OACPC,MAAM,UAGd,kBAACL,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWN,EAAQH,OACxC,8CAEJ,kBAACc,EAAA,EAAD,CAAYC,QAAQ,MACpB,2BAAON,UAAU,eAAeW,QAAQ,YACpC,2BAAOC,KAAK,WAAWC,GAAG,WAAWC,SA3BjC,SAACC,GACjB,IAAMC,EAAgBC,SAASC,iBAAiB,aAChDD,SAASE,KAAKC,UAAUC,OAAO,kBAC/BL,EAAcM,SAAQ,SAAAC,GAAI,OAAIA,EAAKH,UAAUC,OAAO,qBACpDxB,GAAYD,MAwBA,yBAAKI,UAAU,sB,+DCApBwB,MAlDf,SAAqBC,GAAO,IAAD,OAGvB,OAFgBA,EAAMC,MAAfC,MAGH,0BAAM3B,UAAU,YAAY4B,SAAWH,EAAMI,cAErCJ,EAAMC,MAAMC,MAAMG,KAAI,SAAAC,GAAI,OACtB,6BACI,2BACI/B,UAAU,QACVgC,IAAKD,EAAKlB,GACVD,KAAK,OACLqB,KAAMF,EAAKA,KACXG,YAAY,2BACZC,MAAQJ,EAAKA,KACbjB,SAAWW,EAAMW,aAAaC,KAAK,EAAMN,EAAKlB,MAElD,2BACIb,UAAU,cACVY,KAAK,QACLqB,KAAK,cACLE,MAAQJ,EAAKvC,MACbsB,SAAWW,EAAMa,kBAAkBD,KAAK,EAAMN,EAAKlB,MAEvD,2BACIb,UAAU,cACVY,KAAK,QACLqB,KAAK,oBACLE,MAAQJ,EAAKQ,YACbzB,SAAWW,EAAMe,wBAAwBH,KAAK,EAAMN,EAAKlB,UAKzE,yBAAKb,UAAU,iBACX,4BAAQa,GAAG,UAAUb,UAAU,kBAAkByC,QAAShB,EAAMiB,kBAAhE,KACA,4BAAQ7B,GAAG,MAAMb,UAAU,kBAAkByC,QAAShB,EAAMkB,eAA5D,MAGJ,4BAAQ/B,KAAK,SAAS6B,QAAUhB,EAAMmB,kBAAoB5C,UAAU,mBAAkB,kBAAC,YAAD,MAAtF,WACA,4BAAQY,KAAK,SAAS6B,QAAUhB,EAAMoB,oBAAsB7C,UAAU,mBAAkB,kBAAC,iBAAD,MAAxF,cACA,4BAAQA,UAAU,oCAAoCY,KAAK,SAAS6B,QAAS,WAC3DxB,SAAS6B,eAAe,eAChCC,UAFV,IAGI,kBAAC,eAAD,MAHJ,WAIA,2BAAOlC,GAAG,cAAcD,KAAK,OAAOE,SAAWW,EAAMuB,qBCjClDC,MAdf,SAAgBxB,GACZ,OACI,yBAAKzB,UAAU,QACX,gCACI,4BACIa,GAAG,YACHb,UAAU,WACVU,MAAM,QAAQD,OAAO,aCNnCyC,EAAmB,SAACxC,EAAOD,EAAQ0C,GACrC,IAAIC,EAAY3C,EACZ4C,EAAW3C,EACXD,EAAO0C,IAEPE,EAAW3C,GADCyC,EAAU1C,GAEtB2C,EAAYD,GAEhB,MAAO,CAACC,YAAWC,aAySRC,E,kDArSX,aAAe,IAAD,8BACV,gBAmDJC,OAAS,SAACC,GAGN,IADA,IAAIC,EAAG,EAAEC,EAAG,EACF,MAAJF,GACFC,GAAMD,EAAGG,WACTD,GAAMF,EAAGI,UACTJ,EAAKA,EAAGK,aAEZ,MAAO,CAACC,EAAGL,EAAGM,EAAGL,IA5DP,EA+DdM,YAAc,SAACF,EAAGC,EAAGE,GACjB,IAAIlC,EAAO,EAAKL,MAAMC,MAAMsC,GAC5B,OAAQH,GAAK/B,EAAK+B,GAAKA,GAAK/B,EAAK+B,EAAI/B,EAAKrB,OAASqD,GAAKhC,EAAKgC,EAAIhC,EAAKtB,QAAUsD,GAAKhC,EAAKgC,GAjEhF,EAoEdG,gBAAkB,SAACnD,GAEf,IAAIoD,EAAQC,EAASC,EADrBtD,EAAEuD,iBADmB,MAGK,EAAK5C,MAAvBC,EAHa,EAGbA,MAAOsB,EAHM,EAGNA,OAEfmB,GADAD,EAAS,EAAKZ,OAAON,IACJa,EACjBO,EAAUF,EAAOJ,EACjB,EAAKQ,OAASC,SAASzD,EAAE0D,QAAUL,GACnC,EAAKM,OAASF,SAASzD,EAAE4D,QAAUN,GAGnC,IAAK,IAAIO,EAAI,EAAGA,EAAIjD,EAAMkD,OAAQD,IAC1B,EAAKZ,YAAY,EAAKO,OAAQ,EAAKG,OAAQE,KAC3C,EAAKE,aAAeF,IAjFlB,EAsFdG,gBAAkB,SAAChE,GACfA,EAAEuD,iBADmB,IAGjBH,EAAQC,EAASC,EAASW,EAAIC,EAI9BC,EAAQC,EALNlC,EAAW,EAAKvB,MAAhBuB,OAGNmB,GADAD,EAAS,EAAKZ,OAAON,IACJa,EACjBO,EAAUF,EAAOJ,EAEjBmB,EAASV,SAASzD,EAAE0D,QAAUL,GAC9Be,EAASX,SAASzD,EAAE4D,QAAUN,GAE9BW,EAAKR,SAASU,EAAS,EAAKX,QAC5BU,EAAKT,SAASW,EAAS,EAAKT,QAE5B,IAAI/C,EAAK,YAAO,EAAKD,MAAMC,OAC3BA,EAAM,EAAKmD,cAAchB,GAAKkB,EAC9BrD,EAAM,EAAKmD,cAAcf,GAAKkB,EAC9B,EAAKV,OAASW,EACd,EAAKR,OAASS,EACd,EAAKC,SAAS,CAAEzD,WAzGN,EA4Gd0D,cAAgB,SAACtE,GACbA,EAAEuD,iBACF,EAAKQ,cAAgB,GA9GX,EAgHdQ,eAAiB,SAACvE,GACdA,EAAEuD,iBACF,EAAKQ,cAAgB,GAlHX,EA+JdS,SAAW,WAAO,IAAD,EAC2C,EAAK7D,MAArD8D,EADK,EACLA,MAAO7D,EADF,EACEA,MAAOlB,EADT,EACSA,OAAQC,EADjB,EACiBA,MAAO+E,EADxB,EACwBA,IAAKtC,EAD7B,EAC6BA,UACtCF,EAAShC,SAAS6B,eAAe,aACjC4C,EAAUzC,EAAO0C,WAAW,MAEhCH,EAAMjF,IAAMkF,EACZD,EAAMI,YAAc,YANP,MAOmB1C,EAAiBxC,EAAOD,EAAQ0C,GAAxDC,EAPK,EAOLA,UAAWC,EAPN,EAOMA,SACnBmC,EAAMK,OAAS,WACX5C,EAAOxC,OAAS2C,EAChBH,EAAOvC,MAAQ2C,EACfqC,EAAQI,UAAUN,EAAO,EAAG,EAAG9E,EAAOD,EAAQ,EAAG,EAAG4C,EAAUD,GAC9D,IAAK,IAAIwB,EAAI,EAAGA,EAAIjD,EAAMkD,OAAQD,IAAK,CACnCc,EAAQK,KAAO,yBADoB,MAEcpE,EAAMiD,GAA/C7C,EAF2B,EAE3BA,KAAMvC,EAFqB,EAErBA,MAAO+C,EAFc,EAEdA,YAAauB,EAFC,EAEDA,EAAGC,EAFF,EAEEA,EAFF,EAEKiC,KACvBN,EAAQO,YAAYlE,GAAMrB,MAC3CgF,EAAQQ,YAAc3D,EACtBmD,EAAQS,WAAWpE,EAAM+B,EAAGC,GAC5B2B,EAAQU,UAAY5G,EACpBkG,EAAQW,SAAStE,EAAM+B,EAAGC,MAlLxB,EAuLdzB,kBAAoB,SAACsC,EAAG0B,GAAW,IAAD,EACNA,EAAMC,OAAtBtE,EADsB,EACtBA,KAAME,EADgB,EAChBA,MAEdqE,YAAW,WACE,YAAO,EAAK9E,MAAMC,OACrBiD,GAAGpF,MAAQ2C,EAEjB,EAAKiD,SAAL,eAAiBnD,EAAOE,MACzB,MA/LO,EAkMdK,wBAA0B,SAACoC,EAAG0B,GAAW,IAAD,EACZA,EAAMC,OAAtBtE,EAD4B,EAC5BA,KAAME,EADsB,EACtBA,MAEdqE,YAAW,WACE,YAAO,EAAK9E,MAAMC,OACrBiD,GAAGrC,YAAcJ,EAEvB,EAAKiD,SAAL,eAAiBnD,EAAOE,MACzB,MAvMH,EAAKT,MAAQ,CACTC,MAAO,CACH,CACId,GAAI,EACJkB,KAAM,GACNvC,MAAO,UACP+C,YAAa,UACb9B,OAAQ,GACRC,MAAO,KACPoD,EAAE,IACFC,EAAE,IAEN,CACIlD,GAAI,EACJkB,KAAM,GACNvC,MAAO,UACP+C,YAAa,UACb9B,OAAQ,GACRC,MAAO,KACPoD,EAAE,IACFC,EAAE,MAGV2B,aAASe,EACTxD,YAAQwD,EACRC,QAAS,GACTC,WAAY,GACZC,YAAa,UACbC,kBAAmB,UACnBpG,OAAQ,IACRC,MAAO,IACP+E,IAAK,gCACLqB,YAAa,GACbtB,WAAOiB,EACPtD,UAAW4D,KAAKC,MAAyB,GAAnBC,OAAOC,aAC7BC,aAAa,EACbrC,cAAe,GAEnB,EAAKsC,kBAAoB,EAAKA,kBAAkB/E,KAAvB,gBACzB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKO,kBAAoB,EAAKA,kBAAkBP,KAAvB,gBACzB,EAAKW,iBAAmB,EAAKA,iBAAiBX,KAAtB,gBACxB,EAAKM,cAAgB,EAAKA,cAAcN,KAAnB,gBACrB,EAAKK,iBAAmB,EAAKA,iBAAiBL,KAAtB,gBACxB,EAAKyC,cAAgB,EACrB,EAAKP,YAASkC,EACd,EAAK/B,YAAS+B,EAjDJ,E,gEAqHM,IAAD,OACPhB,EAAQ4B,KAAK3F,MAAb+D,IACJxC,EAAShC,SAAS6B,eAAe,aACjC4C,EAAUzC,EAAO0C,WAAW,MAC5BH,EAAQ,IAAI8B,MAChB9B,EAAMjF,IAAMkF,EAEZ8B,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACPE,EAAUF,EAASG,KAAnBD,MACR,EAAKvC,SAAS,CAAE0B,YAAaa,EAAOnC,QAAOvC,SAAOyC,eACnD8B,MAAM,WAELvE,EAAO4E,YAAc,SAAC9G,GAClBA,EAAEuD,iBACF,EAAKJ,gBAAgBnD,IAGzBkC,EAAO6E,YAAe,SAAC/G,GACnBA,EAAEuD,kBACsB,IAArB,EAAKQ,cACJ,EAAKC,gBAAgBhE,IAI7BkC,EAAO8E,UAAY,SAAChH,GAChBA,EAAEuD,iBACF,EAAKe,cAActE,IAGvBkC,EAAO+E,WAAa,SAACjH,GACjBA,EAAEuD,iBACF,EAAKgB,eAAevE,S,2CAM5BsG,KAAK9B,a,mCAiDIX,EAAG0B,GACZA,EAAMhC,iBACN,IACIoB,EADSzE,SAAS6B,eAAe,aAChB6C,WAAW,MAChCD,EAAQK,KAAO,yBAJI,IAKX5D,EAAUmE,EAAMC,OAAhBpE,MACJR,EAAK,YAAO0F,KAAK3F,MAAMC,OAC3BA,EAAMiD,GAAG7C,KAAOI,EAChBR,EAAMiD,GAAGlE,MAAQgF,EAAQO,YAAY9D,GAAOzB,MAC5C2G,KAAKjC,SAAS,CAAEzD,Y,oCAGN2E,GACVA,EAAMhC,iBACN,IAAI3C,EAAK,YAAO0F,KAAK3F,MAAMC,OAC3BA,EAAMsG,KAAK,CACPpH,GAAGc,EAAMkD,OACT9C,KAAM,GACNvC,MAAO,UACP+C,YAAa,UACbyD,KAAM,GACNlC,EAAE,GACFC,EAAE,GACFtD,OAAO,KAEX4G,KAAKjC,SAAS,CAAEzD,Y,uCAGH2E,GACbA,EAAMhC,iBACN,IAAI3C,EAAQ0F,KAAK3F,MAAMC,MAAMuG,MAAM,GAAG,GACtCb,KAAKjC,SAAS,CAAEzD,Y,wCAGF2E,GACdA,EAAMhC,iBACN,IAAM6D,EAAUpB,KAAKC,MAAMD,KAAKqB,SAAWf,KAAK3F,MAAMoF,YAAYjC,QAF7C,EAGUwC,KAAK3F,MAAMoF,YAAYqB,GAA9C1C,EAHa,EAGbA,IAAK/E,EAHQ,EAGRA,MAAOD,EAHC,EAGDA,OACpB4G,KAAKjC,SAAS,CAAEK,IAAKA,EAAK/E,MAAOA,EAAOD,OAAQA,EAAQ0G,aAAa,IACrEkB,QAAQC,IAAIjB,KAAK3F,S,uCAGJ4E,GACb,IAAMiC,EAAQlB,KACR5B,EAAMwB,OAAOuB,IAAIC,gBAAgBnC,EAAMC,OAAOmC,MAAM,IACpDC,EAAM,IAAIrB,MAChBqB,EAAI9C,OAAS,WAAY,IAAD,EACY3C,EAAiBmE,KAAK3G,MAAO2G,KAAK5G,QAA1D2C,EADY,EACZA,UAAWC,EADC,EACDA,SACnBkF,EAAMnD,SAAS,CAAEK,MAAK/E,MAAO2C,EAAU5C,OAAQ2C,EAAW+D,aAAa,KAE3EwB,EAAIpI,IAAMkF,I,0CAGMa,GAChBA,EAAMhC,iBACN+D,QAAQC,IAAIhC,GACZ,IACId,EADSvE,SAAS6B,eAAe,aAClB8F,UAAU,cACzBD,EAAM,IAAIrB,MACdqB,EAAI/C,YAAY,YAChB+C,EAAIE,KAAKrD,EACT,IAAIsD,EAAO7H,SAAS8H,cAAc,KAClCD,EAAKE,SAAW,YAChBF,EAAKD,KAAKrD,EACVsD,EAAK/F,U,+BAIL,OACI,yBAAK/C,UAAU,YACX,kBAAC,EAAD,CACI0B,MAAQ2F,KAAK3F,MACbkB,kBAAoByE,KAAKzE,kBACzBR,aAAeiF,KAAKjF,aACpB6G,eAAiB5B,KAAK4B,eACtB3G,kBAAoB+E,KAAK/E,kBACzBE,wBAA0B6E,KAAK7E,wBAC/BQ,iBAAmBqE,KAAKrE,iBACxBL,cAAgB0E,KAAK1E,cACrBD,iBAAmB2E,KAAK3E,iBACxBG,oBAAsBwE,KAAKxE,sBAE/B,kBAAC,EAAD,W,GAhSYqG,a,uBCebC,MAzBf,WAEI,OACI,yBAAKtI,GAAG,UACJ,yBAAKA,GAAG,QACJ,uBAAGgI,KAAK,kCACJ,kBAAC,cAAYO,SAAb,CAAsBjH,MAAO,CAAC3C,MAAM,sBAChC,6BAAK,kBAAC,IAAD,UAIjB,yBAAKqB,GAAG,UAAR,aACc,kBAAC,IAAD,MADd,OAC+B,uBAAGgI,KAAK,iCAAR,qBAE/B,yBAAKhI,GAAG,SACJ,uBAAGgI,KAAK,0CACJ,kBAAC,cAAYO,SAAb,CAAsBjH,MAAO,CAAC3C,MAAM,UAChC,6BAAK,kBAAC,IAAD,Y,MCNd6J,MAVf,WACI,OACI,yBAAKrJ,UAAU,gBAAgBsJ,aAAW,QACtC,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,QCCQC,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7I,SAAS6B,eAAe,SDyHpB,kBAAmBiH,WACrBA,UAAUC,cAAcC,MACrBzC,MAAK,SAAA0C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMzK,c","file":"static/js/main.e5ad37eb.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      color: 'white',\r\n    },\r\n  }));\r\n\r\nfunction Header() {\r\n\r\n    const classes = useStyles();\r\n    const [ message, setMessage ] = useState(false)\r\n\r\n    const switchTheme = (e) => {\r\n        const invertedNodes = document.querySelectorAll('.inverted')\r\n        document.body.classList.toggle('inverted-theme')\r\n        invertedNodes.forEach(node => node.classList.toggle('inverted-theme'))\r\n        setMessage(!message) \r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"static\" className=\"inverted-theme\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    <img \r\n                        className=\"inverted inverted-theme\"\r\n                        src=\"https://upload.wikimedia.org/wikipedia/en/9/9a/Trollface_non-free.png\" \r\n                        // src=\"http://assets.stickpng.com/images/580b585b2edbce24c47b2a2f.png\"\r\n                        alt=\"Problem?\"\r\n                        height=\"50px\"\r\n                        width=\"50px\"\r\n                    />\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    <p>Meme Generator</p>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                <label className=\"theme-switch\" htmlFor=\"checkbox\">\r\n                    <input type=\"checkbox\" id=\"checkbox\" onChange={switchTheme}/>\r\n                    <div className=\"slider round\"></div>\r\n                </label>\r\n\r\n\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { FaDownload, FaFileDownload,  } from \"react-icons/fa/index\"\r\nimport { Download, MdFileDownload, MdFileUpload, MdShuffle } from \"react-icons/md/index\"\r\nimport { VscDesktopDownload } from \"react-icons/vsc\";\r\n\r\nfunction displayMeme(props){\r\n    const {texts} = props.state;\r\n    // console.log(texts)\r\n    return (\r\n        <form className=\"meme-form\" onSubmit={ props.handleSubmit } >\r\n            {\r\n                props.state.texts.map(text => (\r\n                    <div>\r\n                        <input\r\n                            className=\"input\"\r\n                            key={text.id}\r\n                            type=\"text\"\r\n                            name={text.text}\r\n                            placeholder=\"Funny text goes here....\"\r\n                            value= {text.text }\r\n                            onChange={ props.handleChange.bind(this, text.id) }\r\n                            />\r\n                        <input\r\n                            className=\"colorPicker\"\r\n                            type=\"color\"\r\n                            name=\"bottomColor\"\r\n                            value={ text.color }\r\n                            onChange={ props.handleColorChange.bind(this, text.id) }\r\n                        />\r\n                        <input\r\n                            className=\"colorPicker\"\r\n                            type=\"color\"\r\n                            name=\"bottomBorderColor\"\r\n                            value={ text.borderColor }\r\n                            onChange={ props.handleBorderColorChange.bind(this, text.id) }\r\n                        />\r\n                    </div>\r\n                ))\r\n            }\r\n            <div className=\"input-control\">\r\n                <button id=\"remove \" className=\"inverted button\" onClick={props.handleRemoveText }>-</button>\r\n                <button id=\"add\" className=\"inverted button\" onClick={props.handleAddText }>+</button>\r\n            </div>\r\n\r\n            <button type=\"submit\" onClick={ props.handleRandomClick } className=\"inverted button\"><MdShuffle/> Random</button>\r\n            <button type=\"submit\" onClick={ props.handleDownloadClick } className=\"inverted button\"><MdFileDownload />  download</button>\r\n            <button className=\"cutom-file-upload inverted button\" type=\"button\" onClick={() => {\r\n                const input = document.getElementById('file-upload');\r\n                input.click();\r\n            }}> <MdFileUpload/> Upload</button>\r\n            <input id=\"file-upload\" type=\"file\" onChange={ props.handleFileChange } />\r\n        </form>            \r\n    )\r\n}\r\n\r\nexport default displayMeme","import React from 'react';\n\n\nfunction canvas(props){\n    return (\n        <div className=\"meme\">\n            <center>\n                <canvas \n                    id=\"my-canvas\" \n                    className=\"inverted\" \n                    width=\"568px\" height=\"335px\"\n                    />\n            </center>\n        </div>\n    )\n}\n\nexport default canvas","import React, {Component } from \"react\"\r\nimport DisplayMeme from './displayMeme'\r\nimport Canvas from './canvas'\r\n\r\nconst checkImageHeight = (width, height, maxHeight) => {\r\n    let newheight = height\r\n    let newwidth = width\r\n    if (height>maxHeight){\r\n        let ratio = maxHeight/height\r\n        newwidth = width * ratio\r\n        newheight = maxHeight\r\n    }\r\n    return {newheight, newwidth}\r\n}\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            texts: [\r\n                {\r\n                    id: 0,\r\n                    text: \"\",\r\n                    color: \"#000000\",\r\n                    borderColor: \"#FFFFFF\",\r\n                    height: 36,\r\n                    width: null,\r\n                    x:250, \r\n                    y:50\r\n                },\r\n                {\r\n                    id: 1,\r\n                    text: \"\",\r\n                    color: \"#000000\",\r\n                    borderColor: \"#FFFFFF\",\r\n                    height: 36,\r\n                    width: null,\r\n                    x:250, \r\n                    y:300\r\n                },\r\n            ],\r\n            context: undefined, \r\n            canvas: undefined,\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            bottomColor: \"#000000\",\r\n            bottomBorderColor: \"#FFFFFF\",\r\n            height: 335,\r\n            width: 568,\r\n            url: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: [],\r\n            image: undefined,\r\n            maxHeight: Math.floor(window.innerHeight*0.8),\r\n            updateImage: false,\r\n            selectedText: -1\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleRandomClick = this.handleRandomClick.bind(this)\r\n        this.handleFileChange = this.handleFileChange.bind(this)\r\n        this.handleAddText = this.handleAddText.bind(this)\r\n        this.handleRemoveText = this.handleRemoveText.bind(this)\r\n        this.selectedText = -1;\r\n        this.startX = undefined;\r\n        this.startY = undefined;\r\n    }\r\n   \r\n    getPos = (el) => {\r\n        // yay readability\r\n        var lx=0,ly=0;\r\n        while(el!=null){\r\n            lx += el.offsetLeft \r\n            ly += el.offsetTop \r\n            el = el.offsetParent\r\n        }\r\n        return {x: lx,y: ly};\r\n    }\r\n\r\n    textHittest = (x, y, textIndex) => {\r\n        var text = this.state.texts[textIndex];\r\n        return (x >= text.x && x <= text.x + text.width && y >= text.y - text.height && y <= text.y);\r\n    }\r\n\r\n    handleMouseDown = (e) => {\r\n        e.preventDefault();\r\n        var offset, offsetX, offsetY;\r\n        const { texts, canvas } = this.state;\r\n        offset = this.getPos(canvas);\r\n        offsetX = offset.x\r\n        offsetY = offset.y\r\n        this.startX = parseInt(e.clientX - offsetX);\r\n        this.startY = parseInt(e.clientY - offsetY);\r\n        // console.log(offsetX, offsetY, e.clientX, e.clientY)\r\n\r\n        for (var i = 0; i < texts.length; i++) {\r\n            if (this.textHittest(this.startX, this.startY, i)) {\r\n                this.selectedText = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleMouseMove = (e) => {\r\n        e.preventDefault()\r\n        var { canvas } = this.state;\r\n        var offset, offsetX, offsetY, dx, dy;\r\n        offset = this.getPos(canvas);\r\n        offsetX = offset.x;\r\n        offsetY = offset.y;\r\n        var mouseX, mouseY\r\n        mouseX = parseInt(e.clientX - offsetX);\r\n        mouseY = parseInt(e.clientY - offsetY);\r\n        // Put your mousemove stuff here\r\n        dx = parseInt(mouseX - this.startX);\r\n        dy = parseInt(mouseY - this.startY);\r\n        // console.log(\"MouseMove\",dx,dy,this.startX,this.startY,mouseX,mouseY,offsetX,offsetY, mouseX-this.startX);\r\n        var texts = [...this.state.texts]\r\n        texts[this.selectedText].x += dx;\r\n        texts[this.selectedText].y += dy;\r\n        this.startX = mouseX;\r\n        this.startY = mouseY;\r\n        this.setState({ texts })\r\n    }\r\n\r\n    handleMouseUp = (e) => {\r\n        e.preventDefault();\r\n        this.selectedText = -1;\r\n    }\r\n    handleMouseOut = (e) => {\r\n        e.preventDefault();\r\n        this.selectedText = -1;\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { url } = this.state\r\n        var canvas = document.getElementById(\"my-canvas\")\r\n        var context = canvas.getContext(\"2d\");\r\n        var image = new Image()\r\n        image.src = url \r\n        // console.log(image.src)\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const { memes } = response.data\r\n            this.setState({ allMemeImgs: memes, image, canvas,context })\r\n        }).then( () => {\r\n\r\n            canvas.onmousedown = (e) => {\r\n                e.preventDefault();\r\n                this.handleMouseDown(e)\r\n            }\r\n\r\n            canvas.onmousemove  = (e) => {\r\n                e.preventDefault();\r\n                if(this.selectedText!==-1){\r\n                    this.handleMouseMove(e)\r\n                }\r\n            }\r\n         \r\n            canvas.onmouseup = (e) => {\r\n                e.preventDefault();\r\n                this.handleMouseUp(e);\r\n            }\r\n          \r\n            canvas.onmouseout = (e) => {\r\n                e.preventDefault();\r\n                this.handleMouseOut(e);\r\n            }\r\n        })\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        this.setImage()\r\n    }\r\n\r\n    setImage = () => {\r\n        const { image, texts, height, width, url, maxHeight } = this.state\r\n        var canvas = document.getElementById(\"my-canvas\")\r\n        var context = canvas.getContext(\"2d\");\r\n        // context.clearRect(0, 0, canvas.width, canvas.height);\r\n        image.src = url;\r\n        image.crossOrigin = \"anonymous\"\r\n        const { newheight, newwidth } = checkImageHeight(width, height, maxHeight);\r\n        image.onload = () => {\r\n            canvas.height = newheight\r\n            canvas.width = newwidth\r\n            context.drawImage(image, 0, 0, width, height, 0, 0, newwidth, newheight);\r\n            for (var i = 0; i < texts.length; i++) {\r\n                context.font = \"2em impact, sans-serif\"\r\n                const { text, color, borderColor, x, y, size } = texts[i];\r\n                const topWidth = context.measureText(text).width\r\n                context.strokeStyle = borderColor\r\n                context.strokeText(text, x, y)\r\n                context.fillStyle = color\r\n                context.fillText(text, x, y)\r\n            }\r\n        }\r\n    }\r\n    \r\n    handleColorChange = (i, event) => {\r\n        const { name, value } = event.target\r\n\r\n        setTimeout(() => {\r\n            var texts = [...this.state.texts];\r\n            texts[i].color = value; \r\n\r\n            this.setState({ [name]: value })\r\n        }, 250);\r\n    }\r\n\r\n    handleBorderColorChange = (i, event) => {\r\n        const { name, value } = event.target\r\n\r\n        setTimeout(() => {\r\n            var texts = [...this.state.texts];\r\n            texts[i].borderColor = value; \r\n\r\n            this.setState({ [name]: value })\r\n        }, 250);\r\n    }\r\n\r\n    handleChange(i, event) {\r\n        event.preventDefault()\r\n        var canvas = document.getElementById(\"my-canvas\")\r\n        var context = canvas.getContext(\"2d\");\r\n        context.font = \"2em impact, sans-serif\"\r\n        const { value } = event.target\r\n        var texts = [...this.state.texts];\r\n        texts[i].text = value;\r\n        texts[i].width = context.measureText(value).width;\r\n        this.setState({ texts })\r\n    }\r\n\r\n    handleAddText(event){\r\n        event.preventDefault()\r\n        var texts = [...this.state.texts]\r\n        texts.push({\r\n            id:texts.length,\r\n            text: \"\",\r\n            color: \"#000000\",\r\n            borderColor: \"#FFFFFF\",\r\n            size: 10,\r\n            x:50, \r\n            y:50,\r\n            height:36\r\n        })\r\n        this.setState({ texts });\r\n    }\r\n\r\n    handleRemoveText(event){\r\n        event.preventDefault()\r\n        var texts = this.state.texts.slice(0,-1);\r\n        this.setState({ texts });\r\n    }\r\n\r\n    handleRandomClick(event) {\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const { url, width, height } = this.state.allMemeImgs[randNum]\r\n        this.setState({ url: url, width: width, height: height, updateImage: true})\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleFileChange(event) {\r\n        const scope = this;\r\n        const url = window.URL.createObjectURL(event.target.files[0])\r\n        const img = new Image();\r\n        img.onload = function() {\r\n            const { newheight, newwidth } = checkImageHeight(this.width, this.height)\r\n            scope.setState({ url, width: newwidth, height: newheight, updateImage: true })\r\n        }\r\n        img.src = url;\r\n    }\r\n\r\n    handleDownloadClick(event){\r\n        event.preventDefault();\r\n        console.log(event);\r\n        var canvas = document.getElementById(\"my-canvas\")\r\n        var image = canvas.toDataURL(\"image/jpeg\");\r\n        var img = new Image();\r\n        img.crossOrigin=\"anonymous\"\r\n        img.href=image\r\n        var link = document.createElement('a');\r\n        link.download = \"meme.jpeg\"\r\n        link.href=image \r\n        link.click()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"memeRoot\">\r\n                <DisplayMeme \r\n                    state={ this.state } \r\n                    handleRandomClick={ this.handleRandomClick } \r\n                    handleChange={ this.handleChange }\r\n                    handleChangeBT={ this.handleChangeBT }\r\n                    handleColorChange={ this.handleColorChange }\r\n                    handleBorderColorChange={ this.handleBorderColorChange }\r\n                    handleFileChange={ this.handleFileChange } \r\n                    handleAddText={ this.handleAddText }\r\n                    handleRemoveText={ this.handleRemoveText }\r\n                    handleDownloadClick={ this.handleDownloadClick }\r\n                />\r\n                <Canvas />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react';\nimport { MdFavorite } from 'react-icons/md'\nimport { FaGithub, FaTwitter  } from 'react-icons/fa'\nimport { IconContext } from \"react-icons\";\n\nfunction Footer() {\n\n    return (\n        <div id=\"footer\">\n            <div id=\"left\">\n                <a href=\"https://twitter.com/jai_dewani\">\n                    <IconContext.Provider value={{color:\"rgb(29, 161, 242)\"}}>\n                        <div><FaTwitter/></div>\n                    </IconContext.Provider>\n                </a>\n            </div>\n            <div id=\"middle\">\n                Made with <MdFavorite/> by <a href=\"https://github.com/jai-dewani\">Jai Kumar Dewani</a>                \n            </div>\n            <div id=\"right\">\n                <a href=\"https://github.com/jai-dewani/Meme-App\">\n                    <IconContext.Provider value={{color:\"black\"}}>\n                        <div><FaGithub/></div>\n                    </IconContext.Provider>\n                </a>\n            </div>      \n        </div>\n    )\n}\n\nexport default Footer","import React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport MemeGenerator from \"./components/MemeGen\"\r\nimport Footer from \"./components/footer\";\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app-container\" data-theme=\"dark\">\r\n            <Header />\r\n            <MemeGenerator />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}